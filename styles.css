.sub-list {
    display: none;
    padding-left: 20px;
}

body {
    font-family: 'Poppins', Arial, sans-serif;
    background-color: #f0f0f0;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
    position: relative;
    overflow: hidden;
}

/* 新增：初始化页面样式，避免层级错乱 */
.page {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    /* 关键修复：初始化透明度和缩放，确保层级正常 */
    opacity: 1;
    transform: scale(1);

    transition: opacity 0.6s ease, transform 0.6s ease;
}

.page1 {
    background-image: url('board1.png');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    z-index: 2;
    filter: blur(8px);
}

.page2, .page3 {
    background-image: url('board2.png');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    z-index: 1;
    filter: blur(8px);
}

header {
    background-color: rgba(51, 51, 51, 0.8);
    color: white;
    width: 100%;
    text-align: center;
    padding: 10px 0;
    margin-top: -50px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: margin 0.3s ease;
}

main {
    background-color: rgba(255, 255, 255, 0.8);
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);
    text-align: center;
    backdrop-filter: blur(15px);
}

/* 优化：隐藏状态仅改变透明度和缩放，不影响层级 */
.hidden {
    opacity: 0;
    transform: scale(0.95);
    pointer-events: none;
    /* 移除 z-index 调整，避免层级闪烁 */
}

.page3-content {
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    justify-content: center;
    width: 100%;
    max-width: 1200px;
}

.profession-list {
    width: 30%;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    padding: 20px;
}

.profession-list button {
    background-color: rgba(51, 51, 51, 0.8);
    color: white;
    border: none;
    padding: 10px 15px;
    margin: 5px 0;
    border-radius: 5px;
    cursor: pointer;
    width: 100%;
    text-align: left;
    transition: background 0.3s ease;
}

.profession-list button:hover {
    background-color: rgba(77, 77, 77, 0.9);
}

.profession-list button.active {
    background-color: #4CAF50;
}

.profession-image {
    width: 70%;
    text-align: center;
}

.profession-image img {
    max-width: 100%;
    height: auto;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
}

.logo-container {
    position: absolute;
    top: 10px;
    left: 10px;
    display: flex;
    align-items: center;
    padding: 5px 10px;
    z-index: 9999;
}

.logo-container img {
    height: 30px;
    margin-right: 8px;
}

.logo-container span {
    font-size: 14px;
    color: #333;
    font-weight: bold;
}

@media screen and (max-width: 600px) {
    header {
        padding: 10px 0;
    }

    main {
        padding: 15px;
        border-radius: 7px;
    }

    p {
        font-size: 14px;
    }

    .page3-content {
        flex-direction: column;
    }

    .profession-list, .profession-image {
        width: 100%;
    }

    .logo-container img {
        height: 20px;
    }

    .logo-container span {
        font-size: 12px;
    }
}

/* 滑动按钮基础样式 */
.scroll-btn {
    position: absolute;
    width: 50px;
    height: 50px;
    background: linear-gradient(135deg, #4CAF50, #2e86c1);
    color: white;
    border: none;
    border-radius: 50%;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    font-size: 24px;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 999;
}

/* 向下按钮初始位置（中下） */
.down-btn {
    bottom: 30px;
    left: 50%;
    transform: translateX(-50%);
}

/* 向上按钮位置（中上，初始隐藏） */
.up-btn {
    top: 30px;
    left: 50%;
    transform: translateX(-50%);
}

/* 按钮动画效果 */
.scroll-btn .arrow {
    transform: scale(1);
    transition: transform 0.3s ease;
}

.scroll-btn:hover .arrow {
    transform: scale(1.2);
}

/* 隐藏状态 */
.hidden {
    opacity: 0;
    transform: translateY(20px);
    pointer-events: none;
}

/* 移动端适配 */
@media screen and (max-width: 600px) {
    .scroll-btn {
        width: 40px;
        height: 40px;
        font-size: 20px;
    }
}这是js代码// 页面切换逻辑
let currentPage = 1;
const page1 = document.querySelector('.page1');
const page2 = document.querySelector('.page2');
const page3 = document.querySelector('.page3');
let startY;

// 新增：初始化时强制显示当前页（避免刷新时隐藏状态残留）
showPage(currentPage);

const showPage = (page) => {
    page1.classList.add('hidden');
    page2.classList.add('hidden');
    page3.classList.add('hidden');

    if (page === 1) {
        page1.classList.remove('hidden');
    } else if (page === 2) {
        page2.classList.remove('hidden');
    } else if (page === 3) {
        page3.classList.remove('hidden');
    }
};

window.addEventListener('touchstart', function(event) {
    startY = event.touches[0].pageY;
});

window.addEventListener('touchmove', function(event) {
    if (startY) {
        const currentY = event.touches[0].pageY;
        const deltaY = currentY - startY;
        if (deltaY > 50) {
            currentPage = Math.max(1, currentPage - 1);
            showPage(currentPage);
            startY = null;
        } else if (deltaY < -50) {
            currentPage = Math.min(3, currentPage + 1);
            showPage(currentPage);
            startY = null;
        }
    }
});

window.addEventListener('wheel', function(event) {
    if (event.deltaY < 0) {
        currentPage = Math.max(1, currentPage - 1);
        showPage(currentPage);
    } else {
        currentPage = Math.min(3, currentPage + 1);
        showPage(currentPage);
    }
});

// 职业列表逻辑（无变化）
const roleButtons = document.querySelectorAll('.profession-list > button[data-role]');
const subLists = document.querySelectorAll('.sub-list');
const professionImage = document.getElementById('profession-image');

roleButtons.forEach(button => {
    button.addEventListener('click', () => {
        const subList = button.nextElementSibling;
        if (subList.style.display === 'block') {
            subList.style.display = 'none';
        } else {
            subLists.forEach(list => list.style.display = 'none');
            subList.style.display = 'block';
        }
    });
});

const subButtons = document.querySelectorAll('.sub-list button');
subButtons.forEach(button => {
    button.addEventListener('click', () => {
        const imageSrc = button.getAttribute('data-image');
        professionImage.src = imageSrc || '';
    });
});

// 获取按钮元素
const scrollDownBtn = document.getElementById('scrollDownBtn');
const scrollUpBtn = document.getElementById('scrollUpBtn');

// 初始化按钮状态
function updateButtonVisibility() {
    if (currentPage === 3) {
        // 最后一页：显示向上按钮，隐藏向下按钮
        scrollDownBtn.classList.add('hidden');
        scrollUpBtn.classList.remove('hidden');
    } else {
        // 非最后一页：显示向下按钮，隐藏向上按钮
        scrollDownBtn.classList.remove('hidden');
        scrollUpBtn.classList.add('hidden');
    }
}

// 按钮点击事件
scrollDownBtn.addEventListener('click', () => {
    currentPage = Math.min(3, currentPage + 1);
    showPage(currentPage);
    updateButtonVisibility(); // 更新按钮状态
});

scrollUpBtn.addEventListener('click', () => {
    currentPage = Math.max(1, currentPage - 1);
    showPage(currentPage);
    updateButtonVisibility(); // 更新按钮状态
});

// 初始调用（确保页面加载时按钮状态正确）
updateButtonVisibility();

// 在页面切换逻辑中补充调用（确保切换页面时按钮更新）
function showPage(page) {
    // 原有逻辑...
    updateButtonVisibility(); // 页面切换后更新按钮状态
}